{% extends "base.html.jinja" %}
{% block title %}Edit item{% endblock %}

{% block head %}
    {{ super() }}
    <script>

        pages = [];
        pageIndex = 0;

        function updateText()
        {
            const apiUrl = {{ url_for('render_item_text')|tojson }};

            formData = new FormData();
            formData.append("folder_key", "{{folder_key}}");
            formData.append("file_name", "{{file_name}}");
            formData.append("key", "{{key_str}}");

            var showOriginal = document.getElementById('show_original')
            formData.append("which_text", showOriginal != undefined && showOriginal.checked ? "original" : "translation");

            var conditions = [];
            for (var toggle of document.getElementsByClassName('condition_toggle'))
            {
                if (toggle.checked)
                {
                    var condition = toggle.id.replace("condition_", "").replace("_active", "");
                    //console.trace(condition + " is checked");
                    //formData.append("active_conditions", condition);
                    conditions.push(toggle.dataset.condition);
                }
            }
            formData.append("active_conditions", JSON.stringify(conditions));

            fetch(apiUrl, { method: 'POST', body: formData })
                .then(response => response.json())
                .then(json => {
                    var conditionsChecked = json['conditions_checked']

                    pages = json['pages'];
                    document.getElementById('max_page_number').innerHTML = pages.length;
                    setPage(pageIndex);

                    for (var toggle of document.getElementsByClassName('condition_toggle'))
                    {
                        if (conditionsChecked.includes(toggle.dataset.condition))
                        {
                            toggle.classList.add("condition_toggle_waschecked");
                        }
                        else
                        {
                            toggle.classList.remove("condition_toggle_waschecked");
                        }
                    }
                });
        }

        function prevPage()
        {
            var potentialPrevPage = pageIndex - 1;
            if (potentialPrevPage >= 0)
            {
                setPage(potentialPrevPage);
            }
        }

        function nextPage()
        {
            var potentialNextPage = pageIndex + 1;
            if (potentialNextPage < pages.length)
            {
                setPage(potentialNextPage);
            }
        }

        function setPage(newPageIndex)
        {
            var text = "";

            var actualPageIndex = newPageIndex;
            if (actualPageIndex < 0)
            {
                actualPageIndex = 0;
            }

            if (actualPageIndex >= pages.length)
            {
                actualPageIndex = pages.length - 1;
            }

            var text = pages[actualPageIndex].replace(/\r?\n/g, '\r\n');

            document.getElementById('preview_text').innerHTML = text;
            document.getElementById('current_page_number').innerHTML = actualPageIndex + 1;

            pageIndex = actualPageIndex;
        }

        function handleTranslationChanged()
        {
            const apiUrl = {{ url_for('update_item_text')|tojson }};

            formData = new FormData();
            formData.append("folder_key", "{{folder_key}}");
            formData.append("file_name", "{{file_name}}");
            formData.append("key", "{{key_str}}");

            var newText = document.getElementById('translated_text').value;

            formData.append("new_text", newText);

            fetch(apiUrl, { method: 'POST', body: formData })
                .then(response => updateText());
        }

        //updateText();
    </script>
{% endblock %}

{% block header %}
    <h1>Edit item - {{key_str}}</h1>
{% endblock %}

{% block header_left %}
    {% if prev_key %}
        <a href="{{url_for('edit_item', folder_key=folder_key, file_name=file_name, key_str=prev_key)}}">{{prev_key}}</a>
    {% endif %}
{% endblock %}

{% block header_right %}
    {% if next_key %}
        <a href="{{url_for('edit_item', folder_key=folder_key, file_name=file_name, key_str=next_key)}}">{{next_key}}</a>
    {% endif %}
{% endblock %}

{% block onload %} updateText(); {% endblock %}

{% block content %}
    <div id="preview_panel">
        <p id="page_number">Page <span id="current_page_number">0</span> of <span id="max_page_number">0</span></p>
        <p id="preview_text"></p>
        <button id="prev_page" onclick="prevPage();">Prev</button>
        <button id="next_page" onclick="nextPage();">Next</button>

        <div id="preview_text_selection">
            <input type="radio" id="show_original" name="which_text" value="original" onclick="updateText();"/>
            <label for="show_original">Original</label>
            <input type="radio" id="show_translated" name="which_text" value="translated" onclick="updateText();" checked/>
            <label for="show_translated">Translated</label>
        </div>

        {% if condition_list %}
        <ul id="condition_list">
            {% for condition in condition_list %}
                <li class="condition_item">
                    <input type="checkbox" id="condition_{{condition}}_active" class="condition_toggle" data-condition="{{condition}}"  onclick="updateText();"/>
                    <label for="condition_{{condition}}_active">{{condition}}</label>
                </li>
            {% endfor %}
        </ul>
    {% endif %}
    </div>

    <div id="text_entry_panel">
        <textarea id="original_text" rows="15" onscroll="document.getElementById('translated_text').scrollTop = document.getElementById('original_text').scrollTop;" readonly>{{original if original else ""}}</textarea>
        <textarea id="translated_text" rows="15" onscroll="document.getElementById('original_text').scrollTop = document.getElementById('translated_text').scrollTop;" onchange="handleTranslationChanged();">{{translation if translation else ""}}</textarea>
    </div>

    <p><a href="{{url_for('items', folder_key=folder_key, file_name=file_name)}}">Back</a></p>

{% endblock %}